name: Build

on:
  pull_request:
  merge_group:
  push:
    branches:
      - develop
    tags:
      - '*'

jobs:
  build:
    name: 'Build and Test on Node ${{ matrix.node_version }} and ${{ matrix.os }}'
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        node_version:
          - 20
          - 22
        os:
          - ubuntu-latest
          - macOS-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Use Node.js ${{ matrix.node_version }}'
        uses: actions/setup-node@v4
        with:
          node-version: '${{ matrix.node_version }}'
      - name: npm build and test
        run: |
          npm run clean
          npm run build
          npm run test

  package:
    name: Package Application
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          # renovate: datasource=docker depName=node
          node-version: '20'
      - name: 'Build Package'
        run: |
          npm run clean
          npm run build

      - name: Write version vars
        run: |
          BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
          BRANCH=${GITHUB_REF_NAME#v}
          APP_VERSION=$(cat package.json | grep version| head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')
          echo Version: $APP_VERSION
          echo "VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

      - name: Build Container Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: tools4homeautomation/solix-exporter
          tags: 'latest next ${{env.APP_VERSION}} ${{env.APP_VERSION}}_rc'
          containerfiles: |
            ./Dockerfile
          build-args: |
            BUILD_DATE=${{env.BUILD_DATE}}
            APP_VERSION=${{env.APP_VERSION}}

      - name: Push To Docker Hub
        id: push-to-dockerhub-preview
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: 'next ${{env.APP_VERSION}}_rc'
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKER_HUB_USER}}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        if: github.ref == 'refs/heads/develop'

      - name: Push To Docker Hub
        id: push-to-dockerhub-tagged
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: 'latest ${{env.APP_VERSION}}'
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKER_HUB_USER}}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        if: github.ref_type == 'tag' || github.tag != ''
  
  build-results:
    name: Build results
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - build
      - package
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
                contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
                || contains(needs.*.result, 'skipped')
                }}
    